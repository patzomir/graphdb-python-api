swagger: "2.0"
info:
  title: RDF4J API
  version: "2.0"
basePath: /

tags:
  - name: repositories
    description: Repository management
  - name: sparql
    description: SPARQL
  - name: contexts
    description: Contexts management
  - name: namespaces
    description: Namespaces management
  - name: graph-store
    description: Graph Store protocol
  - name: transactions
    description: Transactions management
  - name: protocol
    description: Protocol verification
produces:
  - application/json
paths:
  /protocol:
    get:
      operationId: get_protocol_version
      tags:
        - protocol
      summary: Fetch the protocol version
      description: The version of the protocol that the server uses to communicate over HTTP.
      responses:
        200:
          description: The protocol version
          schema:
            type: integer
            format: int32
  /repositories:
    get:
      operationId: get_all_repositories
      tags:
        - repositories
      summary: An overview of the repositories that are available on a server.
      description: Get an list of available repositories, including ID, title, read- and write access parameters for each listed repository. The list is formatted as a tuple query result with variables 'uri', 'id', 'title', 'readable' and 'writable'. The 'uri' value gives the URI/URL for the repository and the 'readable' and 'writable' values are xsd:boolean typed literals indicating read- and write permissions.
      responses:
        200:
          description: Repository list
          schema:
            type: integer
  /repositories/{repositoryID}:
    get:
      operationId: execute_get_select_query
      tags:
        - sparql
      summary: Send queries on a specific repository with ID. This resource represents a SPARQL query endpoint
      description: The main endpoint that is responsible for sending queries to a particular repository
      parameters:
        - name: repositoryID
          in: path
          description: The repository ID
          required: true
          type: string
        - name: query
          in: query
          description: The query to evaluate
          required: true
          type: string
        - name: queryLn
          in: query
          description: Specifies the query language that is used for the query. Acceptable values are strings denoting the query languages supported by the server, i.e. 'serql' for SeRQL queries and 'sparql' for SPARQL queries. If not specified, the server assumes the query is a SPARQL query
          required: false
          type: string
        - name: infer
          in: query
          description: Specifies whether inferred statements should be included in the query evaluation. Inferred statements are included by default. Specifying any value other than 'true' (ignoring case) restricts the query evluation to explicit statements only.
          required: false
          type: boolean
        - name: $<varname>
          in: query
          required: false
          description: Specifies variable bindings. Variables appearing in the query can be bound to a specific value outside the actual query using this option. The value should be an N-Triples encoded RDF value.
          type: string
        - name: timeout
          in: query
          required: false
          description: Specifies a maximum query execution time, in whole seconds. The value should be an integer. A setting of 0 or a negative number indicates unlimited query time (the default).
          type: integer
        - name: distinct
          in: query
          required: false
          description: Specifies if only distinct query solutions should be returned. The value should be true or false. If the supplied SPARQL query itself already has a DISTINCT modifier, this parameter will have no effect.
          type: boolean
        - name: limit
          in: query
          required: false
          description: Specifies the maximum number of query solutions to return. The value should be a positive integer. If the supplied SPARQL query itself already has a LIMIT modifier, this parameter will only have an effect if the supplied value is lower than the LIMIT value in the query.
          type: integer
        - name: offset
          in: query
          required: false
          description: Specifies the number of query solutions to skip. The value should be a positive integer. This parameter is cumulative with any OFFSET modifier in the supplied SPARQL query itself.
          type: integer
      responses:
        200:
          description: Result from the sparql query
          schema:
            type: integer
      produces:
        - application/sparql-results+xml
        - application/sparql-results+json
        - application/x-binary-rdf-results-table
    delete:
      operationId: delete_repository
      tags:
        - repositories
      summary: Repository removal
      description: "Delete a specific repository by ID. Care should be taken with the use of this method: the result of this operation is the complete removal of the repository from the server, including its configuration settings and (if present) data directory"
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
      responses:
        204:
          description: The repository was deleted
  /repositories/{repositoryID}/statements:
    get:
      operationId: get_all_statements
      tags:
        - repositories
      summary: Fetches statements from the repository.
      description: Get statements from the repository matching the filtering parameters
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: subj
          in: query
          description: Restricts the operation to statements with the specified N-Triples encoded resource as subject.
          type: string
        - name: pred
          in: query
          description: Restricts the operation to statements with the specified N-Triples encoded URI as predicate.
          type: string
        - name: obj
          in: query
          description: Restricts the operation to statements with the specified N-Triples encoded value as object.
          type: string
        - name: context
          in: query
          description: If specified, restricts the operation to one or more specific contexts in the repository. The value of this parameter is either an N-Triples encoded URI or bnode ID, or the special value 'null' which represents all context-less statements. If multiple 'context' parameters are specified, the request will operate on the union of all specified contexts. The operation is executed on all statements that are in the repository if no context is specified.
          type: string
        - name: infer
          in: query
          description: Specifies whether inferred statements should be included in the result of GET requests. Inferred statements are included by default. Specifying any value other than 'true' (ignoring case) restricts the request to explicit statements only.
          type: string
      responses:
        200:
          description: Statements result
          schema:
            type: integer
      produces:
        - application/rdf+xml
        - text/plain
        - text/turtle
        - text/rdf+n3
        - text/x-nquads
        - application/rdf+json
        - application/trix
        - application/x-trig
        - application/x-binary-rdf
    delete:
      operationId: delete_statements
      tags:
        - repositories
      summary: Deletes statements from the repository.
      description: Deletes statements from the repository matching the filtering parameters
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: subj
          in: query
          description: Restricts the operation to statements with the specified N-Triples encoded resource as subject.
          type: string
        - name: pred
          in: query
          description: Restricts the operation to statements with the specified N-Triples encoded URI as predicate.
          type: string
        - name: obj
          in: query
          description: Restricts the operation to statements with the specified N-Triples encoded value as object.
          type: string
        - name: context
          in: query
          description: If specified, restricts the operation to one or more specific contexts in the repository. The value of this parameter is either an N-Triples encoded URI or bnode ID, or the special value 'null' which represents all context-less statements. If multiple 'context' parameters are specified, the request will operate on the union of all specified contexts. The operation is executed on all statements that are in the repository if no context is specified.
          type: string
      responses:
        200:
          description: The statements were successfully deleted
          schema:
            type: integer
    put:
      operationId: put_statements
      tags:
        - repositories
      summary: Updates data in the repository, replacing any existing data with the supplied data
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: context
          in: query
          description: If specified, restricts the operation to one or more specific contexts in the repository. The value of this parameter is either an N-Triples encoded URI or bnode ID, or the special value 'null' which represents all context-less statements. If multiple 'context' parameters are specified, the request will operate on the union of all specified contexts. The operation is executed on all statements that are in the repository if no context is specified.
          type: string
        - name: baseURI
          in: query
          description: Specifies the base URI to resolve any relative URIs found in uploaded data against
          type: string
        - name: rdfData
          in: body
          description: The supplied data
          schema:
            type: string
            format: string
      responses:
        204:
          description: The data was seccussfully updated
      consumes:
        - application/rdf+xml
        - text/plain
        - text/turtle
        - text/rdf+n3
        - text/x-nquads
        - application/rdf+json
        - application/trix
        - application/x-trig
        - application/x-binary-rdf
    post:
      operationId: update
      tags:
        - sparql
      summary: Performs updates on the data in the repository
      description: The data supplied with this request is expected to contain either an RDF document, a SPARQL 1.1 Update string, or a special purpose transaction document. If an RDF document is supplied, the statements found in the RDF document will be added to the repository. If a SPARQL 1.1 Update string is supplied, the update operation will be parsed and executed. If a transaction document is supplied, the updates specified in the transaction document will be executed.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: update
          in: query
          description: Only relevant for POST operations. Specifies the SPARQL 1.1 Update string to be executed. The value is expected to be a syntactically valid SPARQL 1.1 Update string.
          type: string
        - name: baseURI
          in: query
          description: Specifies the base URI to resolve any relative URIs found in uploaded data against. This parameter only applies to the PUT and POST method.
          type: string
      consumes:
        - application/rdf+xml
        - text/plain
        - text/turtle
        - text/rdf+n3
        - text/x-nquads
        - application/rdf+json
        - application/trix
        - application/x-trig
        - application/x-binary-rdf
      responses:
        204:
          description: The data was seccussfully updated
  /repositories/{repositoryID}/size:
    get:
      operationId: get_repository_size
      tags:
        - repositories
      summary: The repository size (defined as the number of statements it contains)
      description: The endpoint will give you the number of statements in the repository or in the given context
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: context
          in: query
          type: string
          description: If specified, restricts the operation to one or more specific contexts in the repository. The value of this parameter is either an N-Triples encoded URI or bnode ID, or the special value 'null' which represents all context-less statements. If multiple 'context' parameters are specified, the request will operate on the union of all specified contexts. The operation is executed on all statements that are in the repository if no context is specified.
      responses:
        200:
          description: Get the size of a specific context if given in the specified repository
          schema:
            type: integer
  /repositories/{repositoryID}/contexts:
    get:
      operationId: get_repository_contexts
      tags:
        - contexts
      summary: Gets a list of resources that are used as context identifiers.
      description: The list is formatted as a tuple query result with a single variable ?contextID?, which is bound to URIs and bnodes that are used as context identifiers.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
      produces:
        - application/sparql-results+xml
        - application/sparql-results+json
        - application/x-binary-rdf-results-table
      responses:
        200:
          description: List of contexts was successfully retrieved.
          schema:
            type: integer
  /repositories/{repositoryID}/namespaces/{namespacesPrefix}:
    get:
      operationId: get_namespace_for_prefix
      tags:
        - namespaces
      summary: Get namespace for a particular prefix
      description: Gets the namespace that has been defined for a particular prefix.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: namespacesPrefix
          in: path
          required: true
          description: URI prefix of a RDF resource
          type: string
      responses:
          200:
            description: The defined namespace of the given prefix was successfully retrieved.
            schema:
              type: integer
    put:
      operationId: set_namespace_for_prefix
      tags:
        - namespaces
      summary: Set namespace for a particular prefix
      description: Sets a new namespace for a particular prefix.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: namespacesPrefix
          in: path
          required: true
          description: URI prefix of a RDF resource
          type: string
        - name: namespace
          in: body
          required: true
          description: The new namespace to be set
          schema:
            type: string
            format: string
      responses:
          204:
            description: The defined namespace was successfully set to the given prefix.
            schema:
              type: integer
      consumes:
        - text/plain
    delete:
        operationId: delete_namespace_for_prefix
        tags:
          - namespaces
        summary: Remove namespace for a particular prefix
        description: Removes the namespace that has been defined for a particular prefix.
        parameters:
          - name: repositoryID
            in: path
            required: true
            description: The repository ID
            type: string
          - name: namespacesPrefix
            in: path
            required: true
            description: URI prefix of a RDF resource
            type: string
        responses:
            204:
              description: The defined namespace with the given prefix was successfully removed.
              schema:
                type: integer
  /repositories/{repositoryID}/rdf-graphs/{graph}:
    get:
      operationId: get_all_statements_from_namedgraph
      tags:
        - graph-store
      summary: Fetch all statements from a DIRECTLY referenced named graph
      description: Fetch all statements from a DIRECTLY referenced named graph.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: graph
          in: path
          required: true
          description: IRI uniquely identifying a named graph. After the request is executed the whole url is read as a named graph and statements from it can be retrieved. E.g. "graph1".
          type: string
      responses:
        200:
          description: Successfully retrived statements from the defined named graph
          schema:
            type: integer
      produces:
        - application/rdf+xml
    post:
      operationId: add_statements_to_namedgraph
      tags:
        - graph-store
      summary: Add statements to a DIRECTLY referenced named graph
      description: Add statements to a DIRECTLY referenced named graph
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: graph
          in: path
          required: true
          description: IRI uniquely identifying a named graph. E.g. "graph1". The whole url is read as a named graph and statements from it can be retrieved.
          type: string
        - name: data
          in: body
          required: true
          description: Valid RDF data is some of the available formats.
          schema:
            type: string
            format: string
      consumes:
        - application/rdf+xml
        - text/plain
        - text/turtle
        - text/rdf+n3
        - text/x-nquads
        - application/rdf+json
        - application/trix
        - application/x-trig
        - application/x-binary-rdf
      responses:
        200:
          description: Successfully added statements to the defined named graph
          schema:
            type: integer
    delete:
      operationId: delete_statements_from_namedgraph
      tags:
        - graph-store
      summary: Clear a DIRECTLY referenced named graph
      description: Clear a DIRECTLY referenced named graph.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: graph
          in: path
          required: true
          description: IRI uniquely identifying a named graph. The whole url is read as a named graph and statements from it can be retrieved. E.g. "graph1"
          type: string
      responses:
        204:
          description: Successfully cleared the defined named graph
          schema:
            type: integer
  /repositories/{repositoryID}/rdf-graphs/service:
    get:
      operationId: get_all_statements_from_indirect_namedgraph
      tags:
        - graph-store
      summary: Fetch all statements from an INDIRECTLY referenced named graph
      description: Fetch all statements from an INDIRECTLY referenced named graph.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: graph
          in: query
          required: true
          description: Indirectly referenced named graph name. The named graph URI is mentioned as the value of this parameter. E.g. "http://example.org/graph1"
          type: string
      responses:
        200:
          description: Successfully retrieved statements from the defined or the default named graph
          schema:
            type: integer
      produces:
        - application/rdf+xml
    delete:
      operationId: delete_statements_from_indirect_namedgraph
      tags:
        - graph-store
      summary: Clear an INDIRECTLY referenced named graph
      description: Clear an INDIRECTLY referenced named graph.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: graph
          in: query
          required: true
          description: Indirectly referenced named graph name. The named graph URI is mentioned as the value of this parameter. E.g. "http://example.org/graph1"
          type: string
      responses:
        204:
          description: Successfully cleared the defined named graph
          schema:
            type: integer
    post:
      operationId: add_statements_to_indirect_namedgraph
      tags:
        - graph-store
      summary: Add statements to an INDIRECTLY referenced named graph
      description: Add statements to an INDIRECTLY referenced named graph.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: graph
          in: query
          required: true
          description: Indirectly referenced named graph name. The named graph URI is mentioned as the value of this parameter. E.g. "http://example.org/graph1"
          type: string
        - name: rdfData
          in: body
          required: true
          description: Valid RDF data is some of the available formats.
          schema:
            type: string
            format: string
      consumes:
        - application/rdf+xml
        - text/plain
        - text/turtle
        - text/rdf+n3
        - text/x-nquads
        - application/rdf+json
        - application/trix
        - application/x-trig
        - application/x-binary-rdf
      responses:
        200:
          description: Successfully added statements to the defined named graph
          schema:
            type: integer
  /repositories/{repositoryID}/transactions:
    post:
      operationId: start_new_transaction
      tags:
        - transactions
      summary: Start a new transaction
      description: Start a new transaction.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
      responses:
        200:
          description: Start a new transaction.
          schema:
            type: integer
  /repositories/{repositoryID}/transactions/{transactionID}:
    put:
      operationId: execute_transaction_action
      tags:
        - transactions
      summary: Execute a transaction action
      description: Execute a transaction action.
      parameters:
        - name: repositoryID
          in: path
          required: true
          description: The repository ID
          type: string
        - name: transactionID
          in: path
          required: true
          description: The transaction ID
          type: string
        - name: action
          in: query
          required: true
          enum:
            - ADD
            - DELETE
            - GET
            - UPDATE
            - SIZE
            - COMMIT
            - QUERY
          description: Type of possible actions in a transaction
          type: string
        - name: subj
          in: query
          required: false
          description: Restricts the operation to statements with the specified N-Triples encoded resource as subject.
          type: string
        - name: pred
          in: query
          required: false
          description: Restricts the operation to statements with the specified N-Triples encoded resource as predicate.
          type: string
        - name: obj
          in: query
          required: false
          description: Restricts the operation to statements with the specified N-Triples encoded resource as object.
          type: string
        - name: context
          in: query
          required: false
          type: string
          description: Restricts the operation to statements with the specified N-Triples encoded resource as context.
        - name: queryLn
          in: query
          required: false
          description: Specifies the query language that is used for the query. Acceptable values are strings denoting the query languages supported by the server, i.e. 'serql' for SeRQL queries and 'sparql' for SPARQL queries. If not specified, the server assumes the query is a SPARQL query.
          type: string
        - name: infer
          in: query
          required: false
          description: Specifies whether inferred statements should be included in the query evaluation. Inferred statements are included by default. Specifying any value other than 'true' (ignoring case) restricts the query evluation to explicit statements only.
          type: boolean
        - name: update
          in: query
          required: false
          description: Specifies the Update operation to be executed. The value is expected to be a syntactically valid SPARQL 1.1 Update string.
          type: string
        - name: baseURI
          in: query
          required: false
          description: Specifies a base IRI to be used when parsing the SPARQL update operation.
          type: string
        - name: using-graph-uri
          in: query
          required: false
          description: One or more named graph IRIs to be used as the default graph(s) for retrieving statements.
          type: string
        - name: using-named-graph-uri
          in: query
          required: false
          description: One or more named graph IRIs to be used as named graphs for retrieving statements.
          type: string
        - name: remove-graph-uri
          in: query
          required: false
          description: One or more named graph IRIs to be used as the default graph(s) for removing statements.
          type: string
        - name: insert-graph-uri
          in: query
          required: false
          description: One or more named graph IRIs to be used as the default graph(s) for inserting statements.
          type: string
        - name: rdf-data/query
          in: body
          description: A parsable RDF document or a query to evaluate; rdf-data is used for the ADD and DELETE actions, query - for the QUERY action.
          required: false
          schema:
            type: string
            format: string
      consumes:
        - application/rdf+xml
        - text/plain
        - text/turtle
        - text/rdf+n3
        - text/x-nquads
        - application/ld+json
        - application/rdf+json
        - application/trix
        - application/x-trig
        - application/x-binary-rdf
        - application/sparql-query
      responses:
        200:
          description: Successfully executed the transaction action.
          schema:
            type: integer
      produces:
        - application/rdf+xml
        - application/sparql-results+json
        - application/sparql-results+xml
        - application/x-binary-rdf-results-table
    delete:
        operationId: rollback_transaction
        tags:
          - transactions
        summary: Abort a transaction
        description: An active transaction can be aborted by means of a HTTP DELETE request on the transaction resource. This will execute a transaction rollback on the repository and will close the transacion. After executing a DELETE, further operations on the same transaction will result in an error.
        parameters:
          - name: repositoryID
            in: path
            required: true
            description: The repository ID
            type: string
          - name: transactionID
            in: path
            required: true
            description: The transaction ID
            type: string
        responses:
          201:
            description: Successfully aborted the defined transaction.
            schema:
              type: integer